Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    namesensor
    para_todos

Grammar

Rule 0     S' -> PROGRAMM
Rule 1     PROGRAMM -> DEVICES CMDS
Rule 2     DEVICES -> DEVICE DEVICES
Rule 3     DEVICES -> DEVICE
Rule 4     DEVICE -> dispositivo dois_pontos chaves_i namedevice chaves_f
Rule 5     DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f
Rule 6     CMDS -> CMD dot CMD
Rule 7     CMDS -> CMD
Rule 8     CMD -> ATTRIB
Rule 9     CMD -> OBSACT
Rule 10    CMD -> ACT
Rule 11    ATTRIB -> set observation igual VAR
Rule 12    OBSACT -> SE
Rule 13    OBSACT -> SES
Rule 14    SE -> se OBS entao ACT
Rule 15    SES -> se OBS entao ACT senao ACT
Rule 16    OBS -> observation oplogic OBSL
Rule 17    OBSL -> VAR
Rule 18    OBSL -> VAR and OBS
Rule 19    VAR -> num bool
Rule 20    ACT -> ACTION namedevice
Rule 21    ACT -> enviar_alerta parenteses_i msg parenteses_f namedevice
Rule 22    ACT -> enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice
Rule 23    ACTION -> ligar
Rule 24    ACTION -> desligar

Terminals, with rules where they appear

and                  : 18
bool                 : 19
chaves_f             : 4 5
chaves_i             : 4 5
desligar             : 24
dispositivo          : 4 5
dois_pontos          : 4 5
dot                  : 6
entao                : 14 15
enviar_alerta        : 21 22
error                : 
igual                : 11
ligar                : 23
msg                  : 21 22
namedevice           : 4 5 20 21 22
namesensor           : 
num                  : 19
observation          : 5 11 16 22
oplogic              : 16
para_todos           : 
parenteses_f         : 21 22
parenteses_i         : 21 22
se                   : 14 15
senao                : 15
set                  : 11
virgula              : 5 22

Nonterminals, with rules where they appear

ACT                  : 10 14 15 15
ACTION               : 20
ATTRIB               : 8
CMD                  : 6 6 7
CMDS                 : 1
DEVICE               : 2 3
DEVICES              : 1 2
OBS                  : 14 15 18
OBSACT               : 9
OBSL                 : 16
PROGRAMM             : 0
SE                   : 12
SES                  : 13
VAR                  : 11 17 18

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMM
    (1) PROGRAMM -> . DEVICES CMDS
    (2) DEVICES -> . DEVICE DEVICES
    (3) DEVICES -> . DEVICE
    (4) DEVICE -> . dispositivo dois_pontos chaves_i namedevice chaves_f
    (5) DEVICE -> . dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f

    dispositivo     shift and go to state 4

    PROGRAMM                       shift and go to state 1
    DEVICES                        shift and go to state 2
    DEVICE                         shift and go to state 3

state 1

    (0) S' -> PROGRAMM .



state 2

    (1) PROGRAMM -> DEVICES . CMDS
    (6) CMDS -> . CMD dot CMD
    (7) CMDS -> . CMD
    (8) CMD -> . ATTRIB
    (9) CMD -> . OBSACT
    (10) CMD -> . ACT
    (11) ATTRIB -> . set observation igual VAR
    (12) OBSACT -> . SE
    (13) OBSACT -> . SES
    (20) ACT -> . ACTION namedevice
    (21) ACT -> . enviar_alerta parenteses_i msg parenteses_f namedevice
    (22) ACT -> . enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice
    (14) SE -> . se OBS entao ACT
    (15) SES -> . se OBS entao ACT senao ACT
    (23) ACTION -> . ligar
    (24) ACTION -> . desligar

    set             shift and go to state 10
    enviar_alerta   shift and go to state 14
    se              shift and go to state 15
    ligar           shift and go to state 16
    desligar        shift and go to state 17

    CMDS                           shift and go to state 5
    CMD                            shift and go to state 6
    ATTRIB                         shift and go to state 7
    OBSACT                         shift and go to state 8
    ACT                            shift and go to state 9
    SE                             shift and go to state 11
    SES                            shift and go to state 12
    ACTION                         shift and go to state 13

state 3

    (2) DEVICES -> DEVICE . DEVICES
    (3) DEVICES -> DEVICE .
    (2) DEVICES -> . DEVICE DEVICES
    (3) DEVICES -> . DEVICE
    (4) DEVICE -> . dispositivo dois_pontos chaves_i namedevice chaves_f
    (5) DEVICE -> . dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f

    set             reduce using rule 3 (DEVICES -> DEVICE .)
    enviar_alerta   reduce using rule 3 (DEVICES -> DEVICE .)
    se              reduce using rule 3 (DEVICES -> DEVICE .)
    ligar           reduce using rule 3 (DEVICES -> DEVICE .)
    desligar        reduce using rule 3 (DEVICES -> DEVICE .)
    dispositivo     shift and go to state 4

    DEVICE                         shift and go to state 3
    DEVICES                        shift and go to state 18

state 4

    (4) DEVICE -> dispositivo . dois_pontos chaves_i namedevice chaves_f
    (5) DEVICE -> dispositivo . dois_pontos chaves_i namedevice virgula observation chaves_f

    dois_pontos     shift and go to state 19


state 5

    (1) PROGRAMM -> DEVICES CMDS .

    $end            reduce using rule 1 (PROGRAMM -> DEVICES CMDS .)


state 6

    (6) CMDS -> CMD . dot CMD
    (7) CMDS -> CMD .

    dot             shift and go to state 20
    $end            reduce using rule 7 (CMDS -> CMD .)


state 7

    (8) CMD -> ATTRIB .

    dot             reduce using rule 8 (CMD -> ATTRIB .)
    $end            reduce using rule 8 (CMD -> ATTRIB .)


state 8

    (9) CMD -> OBSACT .

    dot             reduce using rule 9 (CMD -> OBSACT .)
    $end            reduce using rule 9 (CMD -> OBSACT .)


state 9

    (10) CMD -> ACT .

    dot             reduce using rule 10 (CMD -> ACT .)
    $end            reduce using rule 10 (CMD -> ACT .)


state 10

    (11) ATTRIB -> set . observation igual VAR

    observation     shift and go to state 21


state 11

    (12) OBSACT -> SE .

    dot             reduce using rule 12 (OBSACT -> SE .)
    $end            reduce using rule 12 (OBSACT -> SE .)


state 12

    (13) OBSACT -> SES .

    dot             reduce using rule 13 (OBSACT -> SES .)
    $end            reduce using rule 13 (OBSACT -> SES .)


state 13

    (20) ACT -> ACTION . namedevice

    namedevice      shift and go to state 22


state 14

    (21) ACT -> enviar_alerta . parenteses_i msg parenteses_f namedevice
    (22) ACT -> enviar_alerta . parenteses_i msg virgula observation parenteses_f namedevice

    parenteses_i    shift and go to state 23


state 15

    (14) SE -> se . OBS entao ACT
    (15) SES -> se . OBS entao ACT senao ACT
    (16) OBS -> . observation oplogic OBSL

    observation     shift and go to state 25

    OBS                            shift and go to state 24

state 16

    (23) ACTION -> ligar .

    namedevice      reduce using rule 23 (ACTION -> ligar .)


state 17

    (24) ACTION -> desligar .

    namedevice      reduce using rule 24 (ACTION -> desligar .)


state 18

    (2) DEVICES -> DEVICE DEVICES .

    set             reduce using rule 2 (DEVICES -> DEVICE DEVICES .)
    enviar_alerta   reduce using rule 2 (DEVICES -> DEVICE DEVICES .)
    se              reduce using rule 2 (DEVICES -> DEVICE DEVICES .)
    ligar           reduce using rule 2 (DEVICES -> DEVICE DEVICES .)
    desligar        reduce using rule 2 (DEVICES -> DEVICE DEVICES .)


state 19

    (4) DEVICE -> dispositivo dois_pontos . chaves_i namedevice chaves_f
    (5) DEVICE -> dispositivo dois_pontos . chaves_i namedevice virgula observation chaves_f

    chaves_i        shift and go to state 26


state 20

    (6) CMDS -> CMD dot . CMD
    (8) CMD -> . ATTRIB
    (9) CMD -> . OBSACT
    (10) CMD -> . ACT
    (11) ATTRIB -> . set observation igual VAR
    (12) OBSACT -> . SE
    (13) OBSACT -> . SES
    (20) ACT -> . ACTION namedevice
    (21) ACT -> . enviar_alerta parenteses_i msg parenteses_f namedevice
    (22) ACT -> . enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice
    (14) SE -> . se OBS entao ACT
    (15) SES -> . se OBS entao ACT senao ACT
    (23) ACTION -> . ligar
    (24) ACTION -> . desligar

    set             shift and go to state 10
    enviar_alerta   shift and go to state 14
    se              shift and go to state 15
    ligar           shift and go to state 16
    desligar        shift and go to state 17

    CMD                            shift and go to state 27
    ATTRIB                         shift and go to state 7
    OBSACT                         shift and go to state 8
    ACT                            shift and go to state 9
    SE                             shift and go to state 11
    SES                            shift and go to state 12
    ACTION                         shift and go to state 13

state 21

    (11) ATTRIB -> set observation . igual VAR

    igual           shift and go to state 28


state 22

    (20) ACT -> ACTION namedevice .

    dot             reduce using rule 20 (ACT -> ACTION namedevice .)
    $end            reduce using rule 20 (ACT -> ACTION namedevice .)
    senao           reduce using rule 20 (ACT -> ACTION namedevice .)


state 23

    (21) ACT -> enviar_alerta parenteses_i . msg parenteses_f namedevice
    (22) ACT -> enviar_alerta parenteses_i . msg virgula observation parenteses_f namedevice

    msg             shift and go to state 29


state 24

    (14) SE -> se OBS . entao ACT
    (15) SES -> se OBS . entao ACT senao ACT

    entao           shift and go to state 30


state 25

    (16) OBS -> observation . oplogic OBSL

    oplogic         shift and go to state 31


state 26

    (4) DEVICE -> dispositivo dois_pontos chaves_i . namedevice chaves_f
    (5) DEVICE -> dispositivo dois_pontos chaves_i . namedevice virgula observation chaves_f

    namedevice      shift and go to state 32


state 27

    (6) CMDS -> CMD dot CMD .

    $end            reduce using rule 6 (CMDS -> CMD dot CMD .)


state 28

    (11) ATTRIB -> set observation igual . VAR
    (19) VAR -> . num bool

    num             shift and go to state 34

    VAR                            shift and go to state 33

state 29

    (21) ACT -> enviar_alerta parenteses_i msg . parenteses_f namedevice
    (22) ACT -> enviar_alerta parenteses_i msg . virgula observation parenteses_f namedevice

    parenteses_f    shift and go to state 35
    virgula         shift and go to state 36


state 30

    (14) SE -> se OBS entao . ACT
    (15) SES -> se OBS entao . ACT senao ACT
    (20) ACT -> . ACTION namedevice
    (21) ACT -> . enviar_alerta parenteses_i msg parenteses_f namedevice
    (22) ACT -> . enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice
    (23) ACTION -> . ligar
    (24) ACTION -> . desligar

    enviar_alerta   shift and go to state 14
    ligar           shift and go to state 16
    desligar        shift and go to state 17

    ACT                            shift and go to state 37
    ACTION                         shift and go to state 13

state 31

    (16) OBS -> observation oplogic . OBSL
    (17) OBSL -> . VAR
    (18) OBSL -> . VAR and OBS
    (19) VAR -> . num bool

    num             shift and go to state 34

    OBSL                           shift and go to state 38
    VAR                            shift and go to state 39

state 32

    (4) DEVICE -> dispositivo dois_pontos chaves_i namedevice . chaves_f
    (5) DEVICE -> dispositivo dois_pontos chaves_i namedevice . virgula observation chaves_f

    chaves_f        shift and go to state 40
    virgula         shift and go to state 41


state 33

    (11) ATTRIB -> set observation igual VAR .

    dot             reduce using rule 11 (ATTRIB -> set observation igual VAR .)
    $end            reduce using rule 11 (ATTRIB -> set observation igual VAR .)


state 34

    (19) VAR -> num . bool

    bool            shift and go to state 42


state 35

    (21) ACT -> enviar_alerta parenteses_i msg parenteses_f . namedevice

    namedevice      shift and go to state 43


state 36

    (22) ACT -> enviar_alerta parenteses_i msg virgula . observation parenteses_f namedevice

    observation     shift and go to state 44


state 37

    (14) SE -> se OBS entao ACT .
    (15) SES -> se OBS entao ACT . senao ACT

    dot             reduce using rule 14 (SE -> se OBS entao ACT .)
    $end            reduce using rule 14 (SE -> se OBS entao ACT .)
    senao           shift and go to state 45


state 38

    (16) OBS -> observation oplogic OBSL .

    entao           reduce using rule 16 (OBS -> observation oplogic OBSL .)


state 39

    (17) OBSL -> VAR .
    (18) OBSL -> VAR . and OBS

    entao           reduce using rule 17 (OBSL -> VAR .)
    and             shift and go to state 46


state 40

    (4) DEVICE -> dispositivo dois_pontos chaves_i namedevice chaves_f .

    dispositivo     reduce using rule 4 (DEVICE -> dispositivo dois_pontos chaves_i namedevice chaves_f .)
    set             reduce using rule 4 (DEVICE -> dispositivo dois_pontos chaves_i namedevice chaves_f .)
    enviar_alerta   reduce using rule 4 (DEVICE -> dispositivo dois_pontos chaves_i namedevice chaves_f .)
    se              reduce using rule 4 (DEVICE -> dispositivo dois_pontos chaves_i namedevice chaves_f .)
    ligar           reduce using rule 4 (DEVICE -> dispositivo dois_pontos chaves_i namedevice chaves_f .)
    desligar        reduce using rule 4 (DEVICE -> dispositivo dois_pontos chaves_i namedevice chaves_f .)


state 41

    (5) DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula . observation chaves_f

    observation     shift and go to state 47


state 42

    (19) VAR -> num bool .

    dot             reduce using rule 19 (VAR -> num bool .)
    $end            reduce using rule 19 (VAR -> num bool .)
    and             reduce using rule 19 (VAR -> num bool .)
    entao           reduce using rule 19 (VAR -> num bool .)


state 43

    (21) ACT -> enviar_alerta parenteses_i msg parenteses_f namedevice .

    dot             reduce using rule 21 (ACT -> enviar_alerta parenteses_i msg parenteses_f namedevice .)
    $end            reduce using rule 21 (ACT -> enviar_alerta parenteses_i msg parenteses_f namedevice .)
    senao           reduce using rule 21 (ACT -> enviar_alerta parenteses_i msg parenteses_f namedevice .)


state 44

    (22) ACT -> enviar_alerta parenteses_i msg virgula observation . parenteses_f namedevice

    parenteses_f    shift and go to state 48


state 45

    (15) SES -> se OBS entao ACT senao . ACT
    (20) ACT -> . ACTION namedevice
    (21) ACT -> . enviar_alerta parenteses_i msg parenteses_f namedevice
    (22) ACT -> . enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice
    (23) ACTION -> . ligar
    (24) ACTION -> . desligar

    enviar_alerta   shift and go to state 14
    ligar           shift and go to state 16
    desligar        shift and go to state 17

    ACT                            shift and go to state 49
    ACTION                         shift and go to state 13

state 46

    (18) OBSL -> VAR and . OBS
    (16) OBS -> . observation oplogic OBSL

    observation     shift and go to state 25

    OBS                            shift and go to state 50

state 47

    (5) DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation . chaves_f

    chaves_f        shift and go to state 51


state 48

    (22) ACT -> enviar_alerta parenteses_i msg virgula observation parenteses_f . namedevice

    namedevice      shift and go to state 52


state 49

    (15) SES -> se OBS entao ACT senao ACT .

    dot             reduce using rule 15 (SES -> se OBS entao ACT senao ACT .)
    $end            reduce using rule 15 (SES -> se OBS entao ACT senao ACT .)


state 50

    (18) OBSL -> VAR and OBS .

    entao           reduce using rule 18 (OBSL -> VAR and OBS .)


state 51

    (5) DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f .

    dispositivo     reduce using rule 5 (DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f .)
    set             reduce using rule 5 (DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f .)
    enviar_alerta   reduce using rule 5 (DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f .)
    se              reduce using rule 5 (DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f .)
    ligar           reduce using rule 5 (DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f .)
    desligar        reduce using rule 5 (DEVICE -> dispositivo dois_pontos chaves_i namedevice virgula observation chaves_f .)


state 52

    (22) ACT -> enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice .

    dot             reduce using rule 22 (ACT -> enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice .)
    $end            reduce using rule 22 (ACT -> enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice .)
    senao           reduce using rule 22 (ACT -> enviar_alerta parenteses_i msg virgula observation parenteses_f namedevice .)

